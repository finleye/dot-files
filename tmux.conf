# Use zsh

# It's 2012
set -g default-terminal "screen-256color"

# Do not choose a title for me
setw -g automatic-rename off

# Use c-a as prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix
bind-key a send-key C-a

# Reload key
bind r source-file ~/.tmux.conf

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# use hjkl for moving
# and HJKL for resizing
setw -g mode-keys vi
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
#set-option repeat-time 1000
# shortcut for closing windows and panes
bind-key c      kill-pane
bind-key q      confirm-before kill-session
bind-key Q      confirm-before kill-server
unbind o
bind o kill-pane -a
unbind c
bind w new-window

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

#use to clear buffer
#bind -n C-k clear-history

# use v and s for windows splits
unbind %
bind s split-window -v
bind v split-window -h

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# change default directory
bind u attach -c "#{pane_current_path}"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Coloring everything
set -g status-fg white
set -g status-bg black
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg yellow
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# statusbar
# set -g status-utf8 on
set -g status-interval 5
set -g status-justify centre
set -g status-left "#[fg=cyan]#S"
set -g status-right "#[fg=cyan]%d %b %l:%M %p"

# activity
setw -g monitor-activity on
set -g visual-activity on
# Use vim keybindings in copy mode
setw -g mode-keys vi

